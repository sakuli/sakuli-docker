# This Dockerfile is used to build an headles vnc image based on Ubuntu
# Used to run CI jobs for nut.js
ARG BASE_IMAGE_VERSION=18.04
FROM ubuntu:$BASE_IMAGE_VERSION

ARG NODE_VERSION
ARG BUILD_DATE

# Ensure mandatory args are set
RUN test -n "${NODE_VERSION}" && \
    test -n "${BUILD_DATE}"

ENV REFRESHED_AT=${BUILD_DATE} \
    LANG='en_US.UTF-8' \
    LANGUAGE='en_US:en' \
    LC_ALL='en_US.UTF-8' \
    DISPLAY=:1 \
    VNC_PORT=5901 \
    NO_VNC_PORT=6901 \
    HOME=/headless \
    TERM=xterm \
    STARTUPDIR=/dockerstartup \
    INST_SCRIPTS=/headless/install \
    NO_VNC_HOME=/headless/noVNC \
    DEBIAN_FRONTEND=noninteractive \
    VNC_COL_DEPTH=24 \
    VNC_RESOLUTION=1280x1024 \
    VNC_PW=vncpassword \
    VNC_VIEW_ONLY=false \
    IMG=taconsol/sakuli-base \
    TESSDATA_PREFIX=/usr/local/share/tessdata

EXPOSE $VNC_PORT $NO_VNC_PORT

WORKDIR $HOME

### Copy all install scripts for further steps
COPY ./src/common/install/ $INST_SCRIPTS/
RUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +

### Copy tesseract
COPY ./src/tesseract /tmp/tesseract

### Install required packages and add configuration
RUN apt-get update && \
    apt-get install -y \
                    wget \
                    locales \
                    gnome-calculator \
                    xfce4-screenshooter \
                    git \
                    nitrogen \
                    rsync \
                    libnss3-tools \
                    build-essential \
                    libxtst-dev \
                    net-tools \
                    python-numpy \
                    chromium-browser \
                    chromium-chromedriver \
                    chromium-browser-l10n \
                    chromium-codecs-ffmpeg \
                    firefox \
                    firefox-geckodriver \
                    openbox \
                    obconf \
                    obmenu \
                    xterm \
                    x11-xkb-utils \
                    libnss-wrapper \
                    gettext \
                    curl \
                    iputils-ping \
                    iputils-tracepath \
                    dnsutils \
                    libleptonica-dev \
                    libpng-dev \
                    libjpeg8-dev \
                    libtiff5-dev \
                    zlib1g-dev \
                    libtool && \
    apt-get clean -y && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/* && \
    locale-gen en_US.UTF-8 && \
    locale-gen de_DE.UTF-8 && \
    TIGERVNC_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/TigerVNC/tigervnc/releases/latest | grep "tag_name" | cut -d ":" -f 2 | cut -d "\"" -f 2 | cut -d "v" -f 2) && \
    echo TIGERVNC_VERSION=$TIGERVNC_VERSION && \
    wget -qO- https://sourceforge.net/projects/tigervnc/files/stable/$TIGERVNC_VERSION/tigervnc-$TIGERVNC_VERSION.x86_64.tar.gz | tar xz --strip 1 --no-same-owner --no-same-permissions -C / && \
    mkdir -p $NO_VNC_HOME/utils/websockify && \
    NOVNC_VERSION=$(curl -s https://github.com/novnc/novnc/releases/latest | cut -f8 -d/ | cut -f1 -d\> | rev | cut -c2- | rev) && \
    echo NOVNC_VERSION=$NOVNC_VERSION && \
    wget -qO- https://github.com/novnc/noVNC/archive/$NOVNC_VERSION.tar.gz | tar xz --strip 1 -C $NO_VNC_HOME && \
    WEBSOCKIFY_VERSION=$(curl -s https://github.com/novnc/websockify/releases/latest | cut -f8 -d/ | cut -f1 -d\> | rev | cut -c2- | rev) && \
    echo WEBSOCKIFY_VERSION=$WEBSOCKIFY_VERSION && \
    wget -qO- https://github.com/novnc/websockify/archive/$WEBSOCKIFY_VERSION.tar.gz | tar xz --strip 1 -C $NO_VNC_HOME/utils/websockify && \
    chmod +x -v $NO_VNC_HOME/utils/*.sh && \
    ln -s $NO_VNC_HOME/vnc_lite.html $NO_VNC_HOME/index.html && \
    ln -s /usr/bin/chromium-browser /usr/bin/google-chrome && \
    echo "CHROMIUM_FLAGS='--no-sandbox --user-data-dir'" > $HOME/.chromium-browser.init && \
    dpkg -i /tmp/tesseract/tesseract_4.1.1-1_amd64.deb && \
    ldconfig && \
    cp /tmp/tesseract/*traineddata /usr/local/share/tessdata && \
    rm -rf /tmp/tesseract

COPY ./src/common/wm/ $HOME/
COPY ./src/common/config/openbox /etc/xdg/openbox
COPY ./src/common/config/vnc $HOME/.vnc

### Copy env scripts for startup
COPY ./src/common/env/ $STARTUPDIR/env

COPY ./src/common/firefox_profile/certificate-profile $HOME/firefox-certificates/
COPY ./src/common/chrome_certificate_store/ $HOME/.pki/

RUN $INST_SCRIPTS/set_user_permission.sh $HOME

### Create vncserver command
COPY ./src/common/vnc/vncserver /usr/bin
RUN chmod 755 /usr/bin/vncserver

USER 1000:1000

### Install nvm
RUN $INST_SCRIPTS/nvm.sh $NODE_VERSION